@mixin search-box() {
  form {
    position: relative;
    input[type=text] {
      width: 100%;
      color: #333333;
      height: 40px;
      border: none;
      background: transparent;
      @include rtl-padding(5px,5px,5px,0px);
      @include placeholder {
        color: #333333;
        text-indent: 0px;
        @include opacity(1);
      }
      &:hover,&:focus{
        outline: 0;
      }
    } 
    button[type=submit] {
      position: absolute;
      background: transparent;
      padding: 0px;
      top: 0px;
      bottom: 0px;
      z-index: 9;
      margin: auto;
      border: none;
      display: table;
      color: #252525;
      font-size: 18px;
      cursor: pointer;
      @include rtl-right(0px);
      &:focus{
        outline: 0;
      }
      &:hover{
        color: $theme-color-default;
      }
    }
  }
}

@mixin popup-search() {
  .popup-title{
    display: block;
    overflow: hidden;
    position: relative;
    .search{
      @include opacity(1);
      @include transition(all 0.5s ease);
    }
    &:before,&:after{
      content: '';
      display: block;
      background: $black;
      position: absolute;
      margin: auto;
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;
      @include opacity(0);
      @include transition(all 0.5s ease);
      @include transform(translateY(50px) rotate(45deg));
    }
    &:before{
      height: 15px;
      width: 1px;
    }
    &:after{
      width: 15px;
      height: 1px;
    }
    &:hover{
      &:before,&:after{
        background: $theme-color-default;
      }
    }
  }
  .popup-content{
    position: absolute;
    top: auto;
    bottom: 0;
    display: none;
    background: $white;
    @include rtl-left-right(auto,100%);
  }
  // form {
  //   input[type=text] {
  //     @include rtl-padding(5px,0px,5px,5px);
  //   }
  // }
  &.open{
    .popup-title{
      &:before,&:after{
        @include opacity(1);
        @include transform(translateY(0px) rotate(45deg));
      }
      .search{
        @include opacity(0);
        @include transform(translateY(50px));
      }
    }
  }
}


@mixin popup-search-bottom() {
  .popup-title{
    @include rtl-margin(0px,0px,0px,0px);
  }
  .popup-content{
    top: 100%;
    border: none;
    bottom: auto;
    @include rtl-left-right(auto,0);
    @include rtl-padding(0px,40px,0px,15px);
    @include box-shadow(0px 4px 15px 0px rgba(102, 102, 102, 0.35));
  }
  &.open{
     .popup-title{
        .search{
          @include transform(translateY(-50px));
        }
     }
  }
  form{
    button[type=submit]{
      @include rtl-right(12px);
    }
  } 
}

@mixin popup-search-mobile() {
  position: static;
  .popup-content{
    width: auto;
    @include rtl-left-right($grid-gutter-width-base/2,$grid-gutter-width-base/2);
  }
}

//reverse
@mixin popup-search-reverse() {
  .popup-content{
    @include rtl-left-right(100%,auto);
  }
}

@mixin popup-search-bottom-reverse() {
  .popup-content{
    @include rtl-left-right(0,auto);
  }
}

@mixin popup-search-mobile-reverse() {
  .popup-content{
    @include rtl-left-right($grid-gutter-width-base/2,auto);
  }
}
//end reverse

@mixin fullwidth-search(){
  width: 100%;
  .popup-content{
    min-width: auto;
    width: 100%;
  }
}

@mixin popup-newsletter(){
  position: fixed;
  bottom: 0px;
  width: 350px;
  z-index: 1000;
  @include rtl-right(0);
  @include rtl-text-align-right();
  @media (max-width: 479px){
    width: 100%;
  }
  .popup-title-newsletter{
    cursor: pointer;
    margin-bottom: 30px;
    display: inline-block;
    position: absolute;
    bottom: 100%;
    @include rtl-right(30px);
    @include rtl-text-align-right();
    &:before{
      content: "\e01e";
      color: $white;
      display: block;
      font-size: 20px;
      font-family: $font-icon-3;
      width: 60px;
      height: 60px;
      text-align: center;
      line-height: 60px;
      background: #6686ed;
      @include border-radius(50%);
      @include box-shadow(0px 5px 20px 0px rgba(102, 134, 237, 0.7));
    }
  }
  .popup-content-newsletter{
    display: none;
    padding: 20px;
    overflow: hidden;
    position: relative;
    background: $white;
    border: 1px solid #eaeaea;
    @include rtl-margin-right(10px);
    @include rtl-text-align-left();
    @include box-shadow(0px 10px 30px 0px rgba(102, 134, 237, 0.1));
    @media (max-width: 479px){
      @include rtl-margin(0,10px,0,10px);
    }
    .close-popup{
      top: 0px;
      display: block;
      color: #252525;
      cursor: pointer;
      padding: 10px;
      position: absolute;
      @include rtl-right(0px);
      &:hover{
        color: $theme-color-default;
      }
    }
  }
  .block_content{
    height: auto !important;
    display: block !important;
  }
  .navbar-toggler{
    display: none;
  }
  &.active{
    .popup-title-newsletter{
      display: none;
    }
  }
}

@mixin userinfor-inline(){
  .popup-title{
        display: none;
    }
    .popup-content{
        border: none;
        display: block;
        position: static;
        font-size: 0px;
        @include animation(none);
      li{
        border-bottom: none;
            display: inline-block;
            vertical-align: middle;
            &.check-out{
              @media (min-width: 992px) {
                display: none;
              }
            }
        }
        .dropdown-item{
            font-size: 12px;
            padding: 18px 15px;
            border-style: solid;
            border-color: #ededed;
          @include rtl-border-width(0px,0px,0px,1px);
            @media (min-width: 992px) and (max-width: 1199px) {
              padding: 18px 10px;
            }
            &:hover{
              background: transparent;
            }
            span{
              white-space: nowrap;
            }
        }
    }
}

@mixin contactinfors-inline(){
  margin-bottom: 10px;
  .title{
    display: none;
  }
  .toggle-footer{
    display: block !important;
    height: auto !important;
    ul{
      li{
        display: inline-block;
        vertical-align: middle;
        &.address{
          display: block;
        }
        i{
          display: none;
        }
        span{
          display: inline-block;
          @include rtl-padding-left(0);
        }
        &:not(.address){
          & + li{
            &:before{
              content: '/';
              display: inline-block;
              vertical-align: middle;
              margin: 0 5px;
            }
          }
        }
      }
    }
  }
}


@mixin prepare-col(){
  padding-left: $grid-gutter-width-base/2;
  padding-right: $grid-gutter-width-base/2;
}


/***************************************************
  Mixins Themes 
/***************************************************/
/* Mixin Normal*/
@mixin rounded-corners($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  -o-border-radius: $radius;
  border-radius: $radius;
}

@mixin box-shadow($shadow) {
  -moz-box-shadow: $shadow;
  -webkit-box-shadow: $shadow;// iOS <4.3 & Android <4.1
  -o-box-shadow: $shadow;
  -ms-box-shadow: $shadow;
  box-shadow: $shadow;
}

@mixin opacity($opacity) {
  opacity: $opacity;
  // IE8 filter
  $opacity-ie: ($opacity * 100);
  filter: #{alpha(opacity=$opacity-ie)};
}

@mixin ellipsis-text($value){
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: $value;
  -webkit-box-orient: vertical;  
}
@mixin box-sizing($boxmodel) {
  -webkit-box-sizing: $boxmodel;
     -moz-box-sizing: $boxmodel;
          box-sizing: $boxmodel;
}
/* Mixin Clear */
@mixin clearboxstyle(){
  background: none;
  border:none;
}

@mixin clearfloat(){
  float: none;
  width: 100%;
}

/* Mixin Border */
@mixin border-exclude-top($border-deep, $border-type, $border-color ){
  border-bottom: $border-deep $border-type $border-color;
  border-left: $border-deep $border-type $border-color;
  border-right: $border-deep $border-type $border-color;
}

@mixin border-exclude-bottom($border-deep, $border-type, $border-color ){
  border-top: $border-deep $border-type $border-color;
  border-left: $border-deep $border-type $border-color;
  border-right: $border-deep $border-type $border-color;
}

@mixin border-exclude-left($border-deep, $border-type, $border-color ){
  border-top: $border-deep $border-type $border-color;
  border-bottom: $border-deep $border-type $border-color;
  border-right: $border-deep $border-type $border-color;
}

@mixin border-exclude-right($border-deep, $border-type, $border-color ){
  border-top: $border-deep $border-type $border-color;
  border-bottom: $border-deep $border-type $border-color;
  border-left: $border-deep $border-type $border-color;
}

// Transitions

@mixin transition($transition...) {
  -webkit-transition: $transition;
       -o-transition: $transition;
          transition: $transition;
}

// Transformations
@mixin rotate($degrees) {
  -webkit-transform: rotate($degrees);
      -ms-transform: rotate($degrees); // IE9 only
          transform: rotate($degrees);
}
@mixin scale($scale-args...) {
  -webkit-transform: scale($scale-args);
      -ms-transform: scale($scale-args); // IE9 only
          transform: scale($scale-args);
}
@mixin translate($x, $y) {
  -webkit-transform: translate($x, $y);
      -ms-transform: translate($x, $y); // IE9 only
          transform: translate($x, $y);
}
@mixin skew($x, $y) {
  -webkit-transform: skew($x, $y);
      -ms-transform: skewX($x) skewY($y); // See https://github.com/twbs/bootstrap/issues/4885; IE9+
          transform: skew($x, $y);
}
@mixin translate3d($x, $y, $z) {
  -webkit-transform: translate3d($x, $y, $z);
          transform: translate3d($x, $y, $z);
}

@mixin rotateX($degrees) {
  -webkit-transform: rotateX($degrees);
      -ms-transform: rotateX($degrees); // IE9 only
          transform: rotateX($degrees);
}
@mixin rotateY($degrees) {
  -webkit-transform: rotateY($degrees);
      -ms-transform: rotateY($degrees); // IE9 only
          transform: rotateY($degrees);
}

/*background RGBA
============================================*/
@mixin rgba($colour, $alpha)
{
  $alphaColour: hsla(hue($colour), saturation($colour), lightness($colour), $alpha);
  $ieAlphaColour: argb($alphaColour);   
  background-color: $colour; 
  background-color: $alphaColour;       
  zoom: 1; 
  background-color: transparent\9; 
}
@mixin border-rgba($colour, $alpha)
{
  $alphaColour: hsla(hue($colour), saturation($colour), lightness($colour), $alpha);
  $ieAlphaColour: argb($alphaColour);   
  border-color: $colour; 
  border-color: $alphaColour;       
  zoom: 1; 
  border-color: transparent\9;
}
@mixin background-hover {
  color: $text-color;
  background: rgba(228, 50, 40, 0.3);
}

// Background Gradient: Left to Right
@mixin bg-gradient-l2r($start-colour, $end-colour) {
    background-color: $start-colour;
    background-image: -webkit-gradient(linear, left top, right top, from($start-colour), to($end-colour));
    background-image: -webkit-linear-gradient(left, $start-colour, $end-colour);
    background-image:    -moz-linear-gradient(left, $start-colour, $end-colour);
    background-image:     -ms-linear-gradient(left, $start-colour, $end-colour);
    background-image:      -o-linear-gradient(left, $start-colour, $end-colour);
    background-image:         linear-gradient(left, $start-colour, $end-colour);
    filter:            progid:DXImageTransform.Microsoft.gradient(start-colourStr='#{$start-colour}', end-colourStr='#{$end-colour}', gradientType='1');
}
/// button variant outline
@mixin button-variant-outline($color, $background, $border, $colorhover, $bghover, $borderhover ) {
  color: $color;
  background-color: $background;
  border-color: $border;

  &:hover,
  &:focus,
  &:active,
  &.active {
    color: $colorhover;
    background-color: $bghover;
        border-color: $borderhover ;
  }
  .open & { &.dropdown-toggle {
    color: $colorhover;
    background-color: $bghover;
        border-color: $borderhover ;
  } }
  &:active,
  &.active {
    background-image: none;
  }
  .open & { &.dropdown-toggle {
    background-image: none;
  } }
  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    &,
    &:hover,
    &:focus,
    &:active,
    &.active {
      background-color: $background;
          border-color: $border;
    }
  }
  .badge {
    color: $background;
    background-color: $color;
  }
}


// Block
// -------------------------
@mixin block-variant($border, $heading-text-color, $heading-bg-color, $heading-border) {
  border-color: $border;

  & .#{$block-heading-selector} {
    color: $heading-text-color;
    a{
      color: $heading-text-color;
    }
    background-color: $heading-bg-color;
    border-color: $heading-border;
    + .#{$block-prefix}-collapse .#{$block-content-selector} {
      border-top-color: $border;
    }
  }
  & > .#{$block-prefix}-footer {
    + .#{$block-prefix}-collapse .#{$block-prefix}-body {
      border-bottom-color: $border;
    }
  }
}
@mixin container-layout-variant($color, $background){
  background: $background;
  color: $color;
} 

/***************************************************
  Mixins RTL Themes 
/***************************************************/

// BASIC CONVERTER (ignore these)

@mixin rtl-base-simple ($property, $direction) {
  #{$property}:$direction;
  .rtl & {
    @if $direction == $rtl-right {
      #{$property}:$rtl-left;
    }
    @else {
      #{$property}:$rtl-right;
    }
  }
}
@mixin rtl-base-inherit ($property, $direction, $value, $inherit : inherit) {
  #{$property}-#{$direction}: $value;
  .rtl & {
    @if $direction == $rtl-right {
      #{$property}-#{$rtl-left}: $value;
    }
    @else {
      #{$property}-#{$rtl-right}: $value;
    }
    #{$property}-#{$direction}: $inherit;
  }
}

@mixin rtl-base-toprightbottomleft ($property, $t, $r, $b, $l) {
  #{$property}: $t $r $b $l;
  .rtl & {
    #{$property}: $t $l $b $r;
  }
}

// BODY STYLES

@mixin rtl-direction ($forBody : true) {
  direction: ltr;
  @if $forBody {
    &.rtl {
      direction: rtl;
    }
  }
  @else {
    .rtl & {
      direction: rtl;
    }
  }
}
@mixin rtl-font-family ($ltr, $rtl, $forBody : false) {
  font-family: $ltr;
  @if $forBody {
    &.rtl, &.non-latin {
      font-family:$rtl;
    }
  }
  @else {
    .rtl &, .non-latin & {
      font-family:$rtl;
    }
  }
}

// MARGIN

@mixin rtl-margin ($t, $r, $b, $l) {
  @include rtl-base-toprightbottomleft(margin,$t, $r, $b, $l);
}
@mixin rtl-margin-left ($value) {
  @include rtl-base-inherit(margin,$rtl-left,$value);
}
@mixin rtl-margin-right ($value) {
  @include rtl-base-inherit(margin,$rtl-right,$value);
}

// PADDING

@mixin rtl-padding ($t, $r, $b, $l) {
  @include rtl-base-toprightbottomleft(padding,$t, $r, $b, $l);
}
@mixin rtl-padding-left ($value) {
  @include rtl-base-inherit(padding,$rtl-left,$value);
}
@mixin rtl-padding-right ($value) {
  @include rtl-base-inherit(padding,$rtl-right,$value);
}

// BORDER

@mixin rtl-border-width ($t,$r,$b,$l) {
  @include rtl-base-toprightbottomleft(border-width,$t,$r,$b,$l);
}
@mixin rtl-border-style ($t,$r,$b,$l) {
  @include rtl-base-toprightbottomleft(border-style,$t,$r,$b,$l);
}
@mixin rtl-border-left ($value) {
  @include rtl-base-inherit(border,$rtl-left,$value);
}
@mixin rtl-border-right ($value) {
  @include rtl-base-inherit(border,$rtl-right,$value);
}

// POSITION

@mixin rtl-left ($value) {
  #{$rtl-left}: $value;
  .rtl & {
    #{$rtl-right}: $value;
    #{$rtl-left}: auto;
  }
}
@mixin rtl-right ($value) {
  #{$rtl-right}: $value;
  .rtl & {
    #{$rtl-left}: $value;
    #{$rtl-right}: auto;
  }
}

// TEXT-ALIGN

@mixin rtl-text-align-left () {
  @include rtl-base-simple(text-align, $rtl-left);
}
@mixin rtl-text-align-right () {
  @include rtl-base-simple(text-align, $rtl-right);
}

// FLOAT

@mixin rtl-float-left () {
  @include rtl-base-simple(float, $rtl-left);
}
@mixin rtl-float-right () {
  @include rtl-base-simple(float, $rtl-right);
}

// BACKGROUND-POSITION

@mixin rtl-background-position-left ($vertical) {
  background-position:$rtl-left $vertical !important;
  .rtl & {
    background-position:$rtl-right $vertical !important;
  }
}
@mixin rtl-background-position-right ($vertical) {
  background-position:$rtl-right $vertical !important;
  .rtl & {
    background-position:$rtl-left $vertical !important;
  }
}

@mixin rtl-background-position-percent ($vertical, $horPercent) {
  background-position:$horPercent $vertical !important;
  .rtl & {
    background-position:100% - $horPercent $vertical !important;
  }
}

// TEXT-SHADOW & BOX-SHADOW

@mixin rtl-text-shadow ($x, $rest) {
  text-shadow: $x $rest;
  .rtl & {
    text-shadow: -1 * $x $rest;
  }
}
@mixin rtl-box-shadow ($x, $rest) {
  -moz-box-shadow: $x $rest;
  -webkit-box-shadow: $x $rest;
  box-shadow: $x $rest;
  .rtl & {
    -moz-box-shadow: -1 * $x $rest;
    -webkit-box-shadow: -1 * $x $rest;
    box-shadow: -1 * $x $rest;
  }
}

// BORDER-RADIUS

@mixin rtl-border-radius($tl, $tr, $br, $bl) {
  -moz-border-radius: $tl $tr $br $bl;
  -webkit-border-radius: $tl $tr $br $bl;
  border-radius: $tl $tr $br $bl;
  .rtl & {
    -moz-border-radius: $tr $tl $bl $br;
    -webkit-border-radius: $tr $tl $bl $br;
    border-radius: $tr $tl $bl $br;
  }
}

@mixin rtl-border-radius-topright ($value) {
  -moz-border-top-#{$rtl-right}-radius: $value;
  -webkit-border-top-#{$rtl-right}-radius: $value;
  border-top-#{$rtl-right}-radius: $value;
  .rtl & {
    -moz-border-top-#{$rtl-left}-radius: $value;
    -webkit-border-top-#{$rtl-left}-radius: $value;
    border-top-#{$rtl-left}-radius: $value;
    -moz-border-top-#{$rtl-right}-radius: inherit;
    -webkit-border-top-#{$rtl-right}-radius: inherit;
    border-top-#{$rtl-right}-radius: inherit;
  }
}

@mixin rtl-border-radius-bottomright ($value) {
  -moz-border-bottom-#{$rtl-right}-radius: $value;
  -webkit-border-bottom-#{$rtl-right}-radius: $value;
  border-bottom-#{$rtl-right}-radius: $value;
  .rtl & {
    -moz-border-bottom-#{$rtl-left}-radius: $value;
    -webkit-border-bottom-#{$rtl-left}-radius: $value;
    border-bottom-#{$rtl-left}-radius: $value;
    -moz-border-bottom-#{$rtl-right}-radius: inherit;
    -webkit-border-bottom-#{$rtl-right}-radius: inherit;
    border-bottom-#{$rtl-right}-radius: inherit;
  }
}

@mixin rtl-border-radius-topleft ($value) {
  -moz-border-top-#{$rtl-left}-radius: $value;
  -webkit-border-top-#{$rtl-left}-radius: $value;
  border-top-#{$rtl-left}-radius: $value;
  .rtl & {
    -moz-border-top-#{$rtl-right}-radius: $value;
    -webkit-border-top-#{$rtl-right}-radius: $value;
    border-top-#{$rtl-right}-radius: $value;
    -moz-border-top-#{$rtl-left}-radius: inherit;
    -webkit-border-top-#{$rtl-left}-radius: inherit;
    border-top-#{$rtl-left}-radius: inherit;
  }
}

@mixin rtl-border-radius-bottomleft ($value) {
  -moz-border-bottom-#{$rtl-left}-radius: $value;
  -webkit-border-bottom-#{$rtl-left}-radius: $value;
  border-bottom-#{$rtl-left}-radius: $value;
  .rtl & {
    -moz-border-bottom-#{$rtl-right}-radius: $value;
    -webkit-border-bottom-#{$rtl-right}-radius: $value;
    border-bottom-#{$rtl-right}-radius: $value;
    -moz-border-bottom-#{$rtl-left}-radius: inherit;
    -webkit-border-bottom-#{$rtl-left}-radius: inherit;
    border-bottom-#{$rtl-left}-radius: inherit;
  }
}

@mixin rtl-left-right ($left,$right) {
  #{$rtl-right}: $right;
  #{$rtl-left}: $left;
  .rtl & {
    #{$rtl-right}: $left;
    #{$rtl-left}: $right;
  }
}

@mixin linear-gradient-product(){
  background: #e3e3e3;
  background: -moz-linear-gradient(top, white 16%, #e3e3e3 53%, white 83%);
  background: -webkit-gradient(linear, left top, left bottom, color-stop(16%, white), color-stop(53%, #e3e3e3), color-stop(83%, white));
  background: -webkit-linear-gradient(top, white 16%, #e3e3e3 53%, white 83%);
  background: -o-linear-gradient(top, white 16%, #e3e3e3 53%, white 83%);
  background: -ms-linear-gradient(top, white 16%, #e3e3e3 53%, white 83%);
  background: linear-gradient(to bottom, #ffffff 16%, #e3e3e3 53%, #ffffff 83%);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$white', endColorstr='$white',GradientType=0 );
}